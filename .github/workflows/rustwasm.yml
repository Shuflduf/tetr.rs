name: Build and Deploy Macroquad to WASM

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal

    - name: Add wasm32 target
      run: rustup target add wasm32-unknown-unknown

    - name: Build the Macroquad project
      run: cargo build --release --target wasm32-unknown-unknown

    - name: Copy the WASM file
      run: cp target/wasm32-unknown-unknown/release/tetrrs.wasm .
    - name: Commit and push the WASM file and assets to web branch
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
        # Fetch all branches
        git fetch --all

        # Checkout the web branch or create it if it doesn't exist
        if git show-ref --quiet refs/heads/web; then
          git checkout web
          git pull origin web
        else
          git checkout --orphan web
        fi

        # Preserve the existing index.html
        cp index.html /tmp/index.html
        
        # Remove all files except .git
        find . -maxdepth 1 ! -name '.' ! -name '.git' -exec rm -rf {} +

        # Restore the preserved index.html
        cp /tmp/index.html ./index.html

        # Copy the new wasm file and assets directory
        cp ../tetrrs.wasm ./tetrrs.wasm
        cp -r ../assets ./assets
        
        # Add and commit the changes
        git add -A
        git commit -m "Deploy new WASM build and assets"
        
        # Push the changes to the web branch
        git push origin web
